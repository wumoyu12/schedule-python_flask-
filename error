from flask import Flask, render_template, request, redirect
import os.path
from os import path

app = Flask(__name__)
whichfilename = "schedule.txt"

@app.route('/')
def main():
    return render_template('personinfo.html')

@app.route("/info", methods=['POST'])
def GetInfo():
    global status
    status = CreateCheckFile()
    for i in range(1, 9):
        global pdnum, course, teacher, room
        pdnum = "Period " + str(i)
        course = request.form.get("course" + str(i))
        teacher = request.form.get("teacher" + str(i))
        room = request.form.get("room" + str(i))
        
        CheckInput()
        if result != "":
            return result
    
    return RetrieveInfo()

def CheckInput():
    global result
    if course == "" or teacher == "" or room == "":
        return render_template('personinfo.html', valid="You must enter all fields. Enter 'n/a' if not applicable")
    if course == "n/a":
        course = "No Class"
    if teacher == "n/a":
        teacher = "No Teacher"
    if room == "n/a":
        room = "No Room"
    
    WriteToFile()
    result = ""

def CreateCheckFile():
    fileDir = os.path.dirname(os.path.realpath("__file__"))
    fileexist = bool(path.exists(whichfilename))

    if fileexist == False:
        return "new"
    else:
        return "edit"

def WriteToFile():
    if status == "new":
        infofile = open(whichfilename, "x")
        infofile.close()
        infofile = open(whichfilename, "w")
    else:
        infofile = open(whichfilename, "a")

    infofile.write(str(pdnum) + "," + str(course) + "," + str(teacher) + "," + str(room) + ",")
    infofile.close()

def RetrieveInfo():
    schedule = []
    if path.exists(whichfilename):
        infofile = open(whichfilename, "r")
        content = infofile.read()
        infofile.close()
        items = content.split(",")
        for i in range(0, len(items)-1, 4):
            if i+3 < len(items):
                schedule.append(items[i:i+4])
    else:
        return render_template('output.html', schedule=[])
    
    return render_template('output.html', schedule=schedule)

if __name__ == '__main__':
    app.run()

 * Serving Flask app 'getinfo'
 * Debug mode: off
[31m[1mWARNING: This is a development server. Do not use it in a production deployment. Use a production WSGI server instead.[0m
 * Running on http://127.0.0.1:5000
[33mPress CTRL+C to quit[0m
127.0.0.1 - - [02/Apr/2025 10:00:22] "GET / HTTP/1.1" 200 -
[2025-04-02 10:00:28,205] ERROR in app: Exception on /info [POST]
Traceback (most recent call last):
  File "C:\Users\MoyuWu\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py", line 1511, in wsgi_app
    response = self.full_dispatch_request()
  File "C:\Users\MoyuWu\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py", line 919, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File "C:\Users\MoyuWu\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py", line 917, in full_dispatch_request
    rv = self.dispatch_request()
  File "C:\Users\MoyuWu\AppData\Local\Programs\Python\Python313\Lib\site-packages\flask\app.py", line 902, in dispatch_request
    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)  # type: ignore[no-any-return]
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\MoyuWu\Schedule\getinfo.py", line 23, in GetInfo
    CheckInput()
    ~~~~~~~~~~^^
  File "C:\Users\MoyuWu\Schedule\getinfo.py", line 31, in CheckInput
    if course == "" or teacher == "" or room == "":
       ^^^^^^
UnboundLocalError: cannot access local variable 'course' where it is not associated with a value
127.0.0.1 - - [02/Apr/2025 10:00:28] "[35m[1mPOST /info HTTP/1.1[0m" 500 -

